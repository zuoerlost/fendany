package com.fendany.demo;

import java.io.*;
import java.nio.file.*;
import java.util.List;
import java.util.Map;
import java.util.Set;

import static java.nio.file.StandardWatchEventKinds.ENTRY_CREATE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_DELETE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY;

/**
 * Created by zhangbaisong083 on 16-8-19.
 * JDK7 新特性
 */
public class NewWayJDK7 {

    /**
     * 测试使用1.7 集合快速创建特性，失败，2016年08月19日11:03:35
     */
    private void test01() {


//        final List<Integer> piDigits = [ 1,2,3,4,5,8 ];

//        List<String> list =["item"];
//        String item = list[0];
//        Set<String> set = {"item"};
//        Map<String, Integer> map = {"key":1};
//        int value = map["key"];
    }

    /**
     * 测试try 失败 2016年08月19日11:03:23
     */
    private void test02() throws FileNotFoundException {
//        String path = "";
//        try {
//            return ;
//        }catch(IOException | Exception e) {
//            e.printStackTrace();
//        }
    }

    private void test03() {
        String s = "test";
        switch (s) {
            case "test":
                System.out.println("test");
            case "test1":
                System.out.println("test1");
                break;
            default:
                System.out.println("break");
                break;
        }

    }

    /**
     * 字面值切分
     * 只是为了可读性
     */
    private void test04() {
        int money = 100_000_000;
    }

    /**
     * 当然这里笔者需要提示你的是，虽然咱们可以直接在程序中定义二进制字面值。但是在程序运算时，仍然会将其转换成十进制展开运算和输出。
     */
    private void test05() {
        int test = 0b010101;
    }

    private void test06() throws IOException {
        String COPYFILEPATH = "";
        String PASTEFILEPATH = "";

        BufferedInputStream reader = new BufferedInputStream(new FileInputStream(COPYFILEPATH));
        byte[] content = new byte[reader.available()];
        reader.read(content);
        BufferedOutputStream write = new BufferedOutputStream(new FileOutputStream(PASTEFILEPATH));
        write.write(content);
    }

    public void test07() throws IOException {
//        Path path = Paths.get("路径：/文件");
        Path path = Paths.get("C:/");
        System.out.println("文件节点数:" + path.getNameCount());
        System.out.println("文件名称:" + path.getFileName());
        System.out.println("文件根目录:" + path.getRoot());
        System.out.println("文件上级关联目录:" + path.getParent());

        Files.copy(Paths.get("路径：/源文件"), Paths.get("路径：/新文件"));

        // 文件监控
//        WatchService watchService = FileSystems.getDefault().newWatchService();

        try {

            WatchService watchService = FileSystems.getDefault().newWatchService();
            path.register(watchService, ENTRY_CREATE, ENTRY_DELETE, ENTRY_MODIFY);
            while (true) {
                WatchKey watchKey = watchService.take();
                for (WatchEvent<?> event : watchKey.pollEvents())
                    System.out.println(event.context().toString() + " 事件类型：" + event.kind());
                if (!watchKey.reset())
                    return;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}